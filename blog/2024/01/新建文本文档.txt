<?php
error_reporting(E_ALL);
include '../common.inc.php';
require ROOT_PATH.'/includes/wechat-sdk/Wechat/Loader.php';
$wechat = new Wechat();
$wechat->responseMsg();
// 服务器校验
//$wechat->valid();

class Wechat{
    protected $domain = '';
    protected $customers = null;
    protected $file_path = ROOT_PATH.'/wechat/customer.json';
    
    protected $config = array(
        'token'          => 'cn2sg_wechat',
        'appid'          => 'wx46cedb1ca44cb9f3',
        'appsecret'      => '65a139d7f7aee7cf5c582a0129c08c78',
        'encodingaeskey' => 's2wxzGFpCddHCCYnLbcFx7Pg4hdPJJRRQm8aEumqvAI',
    );
    public function __construct(){
        if(file_exists($this->file_path)){
            $contents = file_get_contents($this->file_path);
            if(empty($contents)){
                die('success');
            }else{
                $this->domain = $_SERVER['REQUEST_SCHEME'].'://'.$_SERVER['HTTP_HOST'];
                $this->customers = json_decode($contents,true);
            }
        }else{
            die('success');
        }
    }
    
    public function responseMsg(){        
        //$obj = &\Wechat\Loader::get('Message', $config);
         $contents = file_get_contents("php://input");
        // file_put_contents('./10.json',$contents);
        //$contents = file_get_contents('./1.txt');
        
        if(!empty($contents)){
        	$html = file_get_contents('./2.txt');
            file_put_contents('./1.txt',$contents);
            $result1 = $this->parse($contents);
            if(empty($result1)){
                file_put_contents('./4.txt','正在匹配失败--'.$contents);
                die('success');
            }else{
                file_put_contents('./1.json',json_encode($result1));
            }
            
            $tmp = $contents.PHP_EOL.json_encode($result1);
            $wxchat = new TableClass("wxchat","Id");
            $days = $wxchat->getdays();
            if(!empty($result1['MsgType'])){
                $msgtype = strtolower( $result1['MsgType'] );
                //$rereiveObj = \Wechat\Loader::get('Receive', $this->config);
	        	$msgObj = \Wechat\Loader::get('Message', $this->config);
                switch($msgtype){
                    case 'text':
                        $days = $wxchat->getdays(); 
                        $hash_sha = sha1($result1['FromUserName'].$days.md5($result1['Content']));
                        
                        $rows = (int)$wxchat->getcount("days={$days} and wxid='{$result1['FromUserName']}' and hash_sha='{$hash_sha}'");
                        
                        if(empty($rows)){
                        	$unixtime = time();
                            $create_time = date('Y-m-d H:i:s',$unixtime);
                            $data1 = array(
                                'mtype'=>1,
                                'wxtype'=>'text',
                                'hash_sha'=>$hash_sha,
                                'days'=>$days,
                                'state'=>0,
                                'wxid'=>$result1['FromUserName'],
                                'wxcontent'=>$result1['Content'],
                                'reply'=>'',
                                'addtime'=>$unixtime,
                                'create_time'=>$create_time,
                            );
                            $fk_id = $wxchat->add($data1);

                            $tmp .= PHP_EOL.$fk_id;
                            if($fk_id>0){
                                foreach($this->customers as $customer){
                                    $data2 = array(
                                        'touser'=>$customer['openid'],
                                        'template_id'=>'o5BBF6GWaAcdJeuV29qiGVU_azfZKQtv_mwUl-ss1Co',
                                        'url'=>$this->domain.'/wechat/detail_one.php?id='.$fk_id,
                                        'topcolor'=>'#FF0000',
                                        'data'=>array(
                                            'first'=>array(
                                                'value'=>'中新通小助手有新的咨询消息',
                                                'color'=>'#173177'
                                            ),
                                            'keyword1'=>array(
                                                'value'=>$result1['Content'],
                                                'color'=>'#173177'
                                            ),
                                            'keyword2'=>array(
                                                'value'=>$create_time,
                                                'color'=>'#173177'
                                            ),
                                            'remark'=>array(
                                                'value'=>'有空请及时查看处理',
                                                'color'=>'#173177'
                                            ),
                                        )
                                    );
                                    $result2 = $msgObj->sendTemplateMessage($data2);
                            		$tmp .= PHP_EOL.PHP_EOL.json_encode($data2).PHP_EOL.PHP_EOL.json_encode($result2);
                                }
                            }else{
                                $logs=new TableClass('logs','id');
                                $data2=array(
                                	'data'=>json_encode($data1),
                                    'create_time'=>$create_time
                                );
                                $data2=$logs->add($data2);
                            	$tmp .= PHP_EOL.'error2---'.json_encode($data2);
                            }
                        }
                        break;
                    case 'image':
                    case 'voice':
                        if($obj['FromUserName'] != $this->customer){
                            $data = array(
                                'touser'=>$this->customer,
                                'msgtype'=>$msgtype,
                                $msgtype=>array(
                                    'media_id'=>$obj['MediaId'],
                                )
                            );
                            $result=$rereiveObj->sendCustomMessage($data);
                            $tmp .= PHP_EOL.json_encode($data).'---222---'.PHP_EOL.json_encode($result);
                        }
                        break;
                    case 'video':
                        if($obj['FromUserName'] != $this->customer){
                            $data = array(
                                'touser'=>$this->customer,
                                'msgtype'=>$msgtype,
                                $msgtype=>array(
                                    'media_id'=>$obj['MediaId'],
                                    "thumb_media_id"=>$obj['ThumbMediaId'],
                                    "title"=>'视频消息',
                                    "description"=>'这是视频消息',
                                )
                            );
                            $tmp .= PHP_EOL.json_encode($data).'---333---'.PHP_EOL.json_encode($result);
                            $result=$rereiveObj->sendCustomMessage($data);
                        }
                        break;
                    default:
                        break;
                }
            }
            file_put_contents('./2.txt',$tmp.PHP_EOL.PHP_EOL.$html);
            die('success');  
        }else{
            file_put_contents('./2.txt','空内容');
            die('success');  
        }
        
        
        
        if(!empty($_GET) && !empty($contents)){
            $html .= PHP_EOL.json_encode($_GET).PHP_EOL.$contents;
            file_put_contents('./1.txt',$html);
        }else if(!empty($_GET)){
            $html .= PHP_EOL.json_encode($_GET);
            file_put_contents('./1.txt',$html);
        }else if(!empty($contents)){
            $html .= PHP_EOL.$contents;
            file_put_contents('./1.txt',$html);
        }
        $tmp = file_get_contents('./3.txt');
    }
        

    public function valid(){
        // 接收参数
        if(!empty($_GET["echostr"])){
            /*$cache_file_path = './1.json';
            $contents = file_get_contents('./1.json');
            if(!empty($contents)){
                $obj = json_decode($contents,true);
            }else{
                $obj = array();
            }*/
            
            //$obj[] = $_GET;
            
            /*
            $data = array(
                'signature'=>"bb2a40da9fa8f6271c9d808bdd9b937cb6e28c9b",
                'echostr'=>"5480968683410423404",
                'timestamp'=>"1669707360",
                'nonce'=>"1551736178"
            );*/
            $contents = file_put_contents('./wechat.json',json_encode($_GET));
            if($this->checkSignature($_GET)){
                die($_GET["echostr"]);
                exit;
            }else{
                die('222');
            }
        }else{
            die('111');   
        }    
    }
    
    protected function parse($contents){
        $contents= substr($contents,5,-6);
        $reg = '/<([\w]+)>\s*<!\[CDATA\[([^\[\]]+)\]\]>\s*<\/\\1>/';
        
        preg_match_all($reg,$contents,$result1);
        if(empty($result1)){
            return false;
        }
        
        $result2= array();
        foreach($result1[1] as $index=>$item){
            $result2[$item] = $result1[2][$index]; 
        }
        return $result2;
    }
    
    
    // 验证秘钥方法------------------------------
    private function checkSignature($data){
        // 接收平台传输过来的4个参数
        $signature = $data["signature"];
        $timestamp = $data["timestamp"];
        $nonce = $data["nonce"];
        $echostr = $_GET["echostr"];
        $params = array($this->config['token'], $timestamp, $nonce);
        
        //file_put_contents('./wechat.json',json_encode($_GET));
        // 字典发排序abcde
        sort($params,SORT_STRING);
        $str = implode( $params );
         
        // 哈希加密算法
        $str = sha1( $str );
        // 对比加密后的字符串和传过来的秘钥是否一样，是的话返回数据
        if( $str == $signature ){
            return true;
        }else{
            return false;
        }
    }
}
?>
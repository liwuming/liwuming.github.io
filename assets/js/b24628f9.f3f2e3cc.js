"use strict";(self.webpackChunkme=self.webpackChunkme||[]).push([[4839],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>d});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var i=r.createContext({}),l=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=l(e.components);return r.createElement(i.Provider,{value:t},e.children)},p="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,s=e.originalType,i=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),p=l(n),m=o,d=p["".concat(i,".").concat(m)]||p[m]||f[m]||s;return n?r.createElement(d,a(a({ref:t},u),{},{components:n})):r.createElement(d,a({ref:t},u))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var s=n.length,a=new Array(s);a[0]=m;var c={};for(var i in t)hasOwnProperty.call(t,i)&&(c[i]=t[i]);c.originalType=e,c[p]="string"==typeof e?e:o,a[1]=c;for(var l=2;l<s;l++)a[l]=n[l];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},1518:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>a,default:()=>f,frontMatter:()=>s,metadata:()=>c,toc:()=>l});var r=n(7462),o=(n(7294),n(3905));const s={},a="js\u4e2d\u4e24\u4e2a\u5c0f\u6570\u76f8\u51cf\uff0c\u51fa\u73b0\u591a\u4f4d\u5c0f\u6570",c={unversionedId:"js&ts/js\u5b66\u4e60\u7ecf/\u7cbe\u5ea6\u4e22\u5931",id:"js&ts/js\u5b66\u4e60\u7ecf/\u7cbe\u5ea6\u4e22\u5931",title:"js\u4e2d\u4e24\u4e2a\u5c0f\u6570\u76f8\u51cf\uff0c\u51fa\u73b0\u591a\u4f4d\u5c0f\u6570",description:"",source:"@site/docs/02.js&ts/01.js\u5b66\u4e60\u7ecf/01.\u7cbe\u5ea6\u4e22\u5931.md",sourceDirName:"02.js&ts/01.js\u5b66\u4e60\u7ecf",slug:"/js&ts/js\u5b66\u4e60\u7ecf/\u7cbe\u5ea6\u4e22\u5931",permalink:"/docs/js&ts/js\u5b66\u4e60\u7ecf/\u7cbe\u5ea6\u4e22\u5931",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/02.js&ts/01.js\u5b66\u4e60\u7ecf/01.\u7cbe\u5ea6\u4e22\u5931.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{},sidebar:"ecma",previous:{title:"xhr",permalink:"/docs/js&ts/js\u5b66\u4e60\u7ecf/xhr"},next:{title:"\u65e5\u671f\u683c\u5f0f\u5316",permalink:"/docs/js&ts/js\u5b66\u4e60\u7ecf/\u65e5\u671f\u683c\u5f0f\u5316"}},i={},l=[],u={toc:l},p="wrapper";function f(e){let{components:t,...n}=e;return(0,o.kt)(p,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"js\u4e2d\u4e24\u4e2a\u5c0f\u6570\u76f8\u51cf\u51fa\u73b0\u591a\u4f4d\u5c0f\u6570"},"js\u4e2d\u4e24\u4e2a\u5c0f\u6570\u76f8\u51cf\uff0c\u51fa\u73b0\u591a\u4f4d\u5c0f\u6570"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"console.log(18.6-8);\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"function diff(...nums){\n    //\u83b7\u53d6\u5c0f\u6570\u4f4d\u6570\n    const reg = /\\d+\\.(\\d+)/;\n    let lengths = [];\n    for(let num of nums){\n        const result = num.toString().match(reg);\n        if(result){\n            lengths.push(result[1].length);\n        }\n    }\n    const maxlength=Math.max(...lengths);\n    const coefficient = 10**maxlength;\n    let sum = 0;\n\n    for(let key in nums){\n        if(key>0){\n            sum += nums[key]*coefficient;\n        }\n    }\n    console.log(sum);\n    return (nums[0]*coefficient- sum)/coefficient;\n}\n")))}f.isMDXComponent=!0}}]);
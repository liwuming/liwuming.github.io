"use strict";(self.webpackChunkme=self.webpackChunkme||[]).push([[3818],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>g});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function u(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var i=r.createContext({}),l=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=l(e.components);return r.createElement(i.Provider,{value:t},e.children)},p="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,s=e.originalType,i=e.parentName,d=u(e,["components","mdxType","originalType","parentName"]),p=l(n),m=a,g=p["".concat(i,".").concat(m)]||p[m]||c[m]||s;return n?r.createElement(g,o(o({ref:t},d),{},{components:n})):r.createElement(g,o({ref:t},d))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var s=n.length,o=new Array(s);o[0]=m;var u={};for(var i in t)hasOwnProperty.call(t,i)&&(u[i]=t[i]);u.originalType=e,u[p]="string"==typeof e?e:a,o[1]=u;for(var l=2;l<s;l++)o[l]=n[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},4133:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>o,default:()=>c,frontMatter:()=>s,metadata:()=>u,toc:()=>l});var r=n(7462),a=(n(7294),n(3905));const s={},o="set\u7cfb\u5217\u96c6\u5408",u={unversionedId:"java/java-se/\u96c6\u5408/set\u7cfb\u5217\u96c6\u5408",id:"java/java-se/\u96c6\u5408/set\u7cfb\u5217\u96c6\u5408",title:"set\u7cfb\u5217\u96c6\u5408",description:"TreeSet",source:"@site/docs/11.java/01.java-se/09.\u96c6\u5408/04.set\u7cfb\u5217\u96c6\u5408.md",sourceDirName:"11.java/01.java-se/09.\u96c6\u5408",slug:"/java/java-se/\u96c6\u5408/set\u7cfb\u5217\u96c6\u5408",permalink:"/docs/java/java-se/\u96c6\u5408/set\u7cfb\u5217\u96c6\u5408",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/11.java/01.java-se/09.\u96c6\u5408/04.set\u7cfb\u5217\u96c6\u5408.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{},sidebar:"java",previous:{title:"ArrayList",permalink:"/docs/java/java-se/\u96c6\u5408/ArrayList"},next:{title:"map",permalink:"/docs/java/java-se/\u96c6\u5408/map"}},i={},l=[{value:"TreeSet",id:"treeset",level:2},{value:"\u7c7b\u5b9e\u73b0Comparetor\u63a5\u53e3\u7684compareTo\u65b9\u6cd5",id:"\u7c7b\u5b9e\u73b0comparetor\u63a5\u53e3\u7684compareto\u65b9\u6cd5",level:3}],d={toc:l},p="wrapper";function c(e){let{components:t,...n}=e;return(0,a.kt)(p,(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"set\u7cfb\u5217\u96c6\u5408"},"set\u7cfb\u5217\u96c6\u5408"),(0,a.kt)("h2",{id:"treeset"},"TreeSet"),(0,a.kt)("p",null,"\u7279\u70b9\uff1a\u4e0d\u91cd\u590d\uff0c\u65e0\u5e8f\uff0c\u65e0\u7d22\u5f15\uff0c\u53ef\u6392\u5e8f\uff08\u9ed8\u8ba4\u5347\u5e8f\uff09"),(0,a.kt)("p",null,"\u5e95\u5c42\u5b9e\u73b0\uff0ctreeset\u5e95\u5c42\u662f\u57fa\u4e8e\u7ea2\u9ed1\u6811\u5b9e\u73b0\u7684\uff0c\u5728set\u96c6\u5408\u7684\u57fa\u7840\u4e0a\u5b9e\u73b0\u4e86\u6392\u5e8f\u3002"),(0,a.kt)("p",null,"\u6ce8\u610f\u4e8b\u9879"),(0,a.kt)("p",null,"\u5bf9\u4e8e\u6570\u503c\u7c7b\u578b\uff0c\u9ed8\u8ba4\u6309\u7167\u6570\u503c\u672c\u8eab\u7684\u5927\u5c0f\u8fdb\u884c\u5347\u5e8f\u6392\u5e8f"),(0,a.kt)("p",null,"\u5bf9\u4e8e\u5b57\u7b26\u4e32\u7c7b\u578b\uff0c\u6309\u7167\u9996\u5b57\u6bcd\u7684\u5bf9\u5e94\u7684ascii\u8fdb\u884c\u5347\u5e8f\u6392\u5e8f\uff0c\u5982\u679c\u9996\u5b57\u6bcd\u4e00\u76f4\u5219\u5bf9\u6bd4\u7b2c\u4e8c\u4e2a\u5b57\u6bcd\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"public class demo03 {\n    public static void main(String[] args) {\n        var nums = new TreeSet<Integer>();\n\n        nums.add(30);\n        nums.add(10);\n        nums.add(40);\n        nums.add(80);\n        nums.add(10);\n        \n        System.out.println(nums);\n    }\n}\n")),(0,a.kt)("p",null,"\u5728\u4f7f\u7528\u5982\u4e0b\u4ee3\u7801\u521b\u5efatreeset\u5bf9\u8c61\u7684\u5b9e\u4f8b\u65f6\u62a5\u9519\uff0c\u9519\u8bef\u4fe1\u606f\u4e3a\uff1aType argument cannot be of primitive type\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"public class demo03 {\n    public static void main(String[] args) {\n        var nums = new TreeSet<int>();\n\n        nums.add(10);\n        nums.add(20);\n        nums.add(30);\n        \n        System.out.println(nums);\n    }\n}\n")),(0,a.kt)("p",null,"\u9519\u8bef\u539f\u56e0"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"\u6cdb\u578b\u7c7b\u578b\u53c2\u6570\u4e0d\u80fd\u662f\u539f\u59cb\u6570\u636e\u7c7b\u578b\uff0c\u800c\u5e94\u8be5\u662f\u5bf9\u8c61\u3002\u56e0\u4e3a\u5728\u7f16\u8bd1\u65f6\u4f1a\u628a\u5e26\u6cdb\u578b\u7684\u8f6c\u6362\u6210Object\u7c7b\u578b\uff0c\u800c\u57fa\u672c\u6570\u636e\u7c7b\u578b\u4e0d\u5c5e\u4e8eObject\uff0c\u6240\u4ee5\u6bd4\u5982\u60f3\u653eint\u7c7b\u578b\uff0c\u5c31\u9700\u8981\u4f7f\u7528\u5b83\u7684\u5c01\u88c5\u7c7bInteger\u7c7b\u578b\uff0c\u800c\u4e0d\u80fd\u662fint")),(0,a.kt)("p",null,"\u65e2\u7136treeset\u662f\u53ef\u6392\u5e8f\u7684\u96c6\u5408\uff0c\u9ed8\u8ba4\u662f\u6309\u5347\u5e8f\u8fdb\u884c\u6392\u5e8f\u7684\uff0c\u90a3\u53ef\u5426\u6309\u7167\u964d\u5e8f\u8fdb\u884c\u6392\u5e8f\u5462\uff1f"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'public class demo04 {\n    public static void main(String[] args) {\n        var nums = new TreeSet<Integer>();\n\n        nums.add(10);\n        nums.add(80);\n        nums.add(50);\n        nums.add(20);\n        nums.add(30);\n        nums.add(10);\n\n        System.out.println(nums);\n\n        //\u5347\u5e8f\u6392\u5e8f\n        System.out.println("treeset\u5347\u5e8f\u6392\u5e8f==>");\n        var iterator1 = nums.iterator();\n        while (iterator1.hasNext()) {\n            Integer next =  iterator1.next();\n            System.out.println(next);\n        }\n\n\n        System.out.println("treeset\u964d\u5e8f\u6392\u5e8f==>");\n        var iterator2 = nums.descendingIterator();\n        while (iterator2.hasNext()) {\n            Integer next = iterator2.next();\n            System.out.println(next);\n        }\n    }\n}\n')),(0,a.kt)("p",null,"iterator,\u662f\u6240\u6709\u96c6\u5408\u5bf9\u8c61\u7684\u516c\u5171\u65b9\u6cd5\uff0c\u5bf9\u4e8etreeset\u800c\u8a00\u5219\u662f\u4ee5\u5347\u5e8f\u7684\u65b9\u5f0f\u83b7\u53d6\u8fed\u4ee3\u5668\u96c6\u5408\u3002"),(0,a.kt)("p",null,"descendingIterator\uff0c\u662ftreeset\u96c6\u5408\u6240\u72ec\u6709\u7684\u65b9\u6cd5\uff0c\u8868\u793a\u4ee5\u964d\u5e8f\u7684\u65b9\u5f0f\u83b7\u53d6\u8fed\u4ee3\u5668\u5668\u96c6\u5408\u3002"),(0,a.kt)("h1",{id:"treeset\u81ea\u5b9a\u4e49\u6392\u5e8f\u5bf9\u8c61"},"treeset\u81ea\u5b9a\u4e49\u6392\u5e8f\u5bf9\u8c61"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"\u7c7b\u5b9e\u73b0Comparable\u63a5\u53e3"),(0,a.kt)("li",{parentName:"ol"},"\u901a\u8fc7treeset\u7684\u6709\u53c2\u6784\u9020\u65b9\u6cd5\uff0c\u4f20\u9012\u6bd4\u8f83\u5668\u63a5\u53e3Comparator\u7684\u5b9e\u4f8b")),(0,a.kt)("h3",{id:"\u7c7b\u5b9e\u73b0comparetor\u63a5\u53e3\u7684compareto\u65b9\u6cd5"},"\u7c7b\u5b9e\u73b0Comparetor\u63a5\u53e3\u7684compareTo\u65b9\u6cd5"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'public class demo05 {\n    public static void main(String[] args) {\n        var students = new TreeSet<student>();\n\n        students.add(new student("\u5218\u5907",50));\n        students.add(new student("\u5173\u7fbd",45));\n        students.add(new student("\u5f20\u98de",42));\n        students.add(new student("\u66f9\u64cd",47));\n        students.add(new student("\u5b59\u6743",41));\n\n        for (var student : students) {\n            System.out.println(student.getName()+"--"+student.getAge());\n        }\n    }\n}\n\nclass student implements Comparable{\n    private String name;\n    private int age;\n\n    public student(String name,int age){\n        this.name = name;\n        this.age = age;\n    }\n\n    @Override\n    public int compareTo(Object o) {\n        student s = (student) o;\n        if(this.age==s.getAge()){\n            return 0;\n        }else{\n            return this.age>s.getAge() ? 1 : -1;\n        }\n    }\n\n    public int getAge() {\n        return age;\n    }\n\n    public void setAge(int age) {\n        this.age = age;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public void setName(String name) {\n        this.name = name;\n    }\n}\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'public class demo06 {\n    public static void main(String[] args) {\n        var students = new TreeSet<student>(new Comparator<student>() {\n            @Override\n            public int compare(student o1, student o2) {\n                return o1.getAge()==o2.getAge() ? 0 : (o1.getAge()>o2.getAge()?1:-1);\n            }\n        });\n        \n        students.add(new student("\u5218\u5907",50));\n        students.add(new student("\u5173\u7fbd",45));\n        students.add(new student("\u5f20\u98de",42));\n        students.add(new student("\u66f9\u64cd",47));\n        students.add(new student("\u5b59\u6743",41));\n\n        for (var student : students) {\n            System.out.println(student.getName()+"--"+student.getAge());\n        }\n    }\n}\n')),(0,a.kt)("p",null,"\u4ee5\u4e0a\u4ee3\u7801\u4e2d\u7684treeset\u7684\u6709\u53c2\u6784\u9020\u53ef\u4ee5\u8fdb\u884c\u7b80\u5316"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"//\u7b2c\u4e00\u6b21\u7b80\u5316\nvar students = new TreeSet<student>(new Comparator<student>() {\n    @Override\n    public int compare(student o1, student o2) {\n        return Integer.compare(o1.getAge(),o2.getAge());\n    }\n});\n\n//\u7b2c\u4e8c\u6b21\u7b80\u5316\nvar students = new TreeSet<student>((student o1,student o2)->Integer.compare(o1.getAge(),o2.getAge()));\n")),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"\u5982\u679c\u7c7b\u5b58\u5728\u6bd4\u8f83\u5668compareTo\u65b9\u6cd5\uff0c\u800ctreeset\u5728\u5b9e\u4f8b\u5316\u65f6\u53c8\u4f20\u9012\u4e86\u6bd4\u8f83\u5668\uff0c\u5219\u6309\u7167\u5c31\u8fd1\u539f\u5219\uff0c\u4f7f\u7528treeset\u5728\u5b9e\u4f8b\u5316\u65f6\u53c8\u4f20\u9012\u4e86\u6bd4\u8f83\u5668\u5bf9\u96c6\u5408\u8fdb\u884c\u6392\u5e8f\u3002")))}c.isMDXComponent=!0}}]);